#!/usr/bin/env bash

DOCKER_CURRENT_DIR_VOLUME='-v "$(pwd):/usr/src/app" -w /usr/src/app'
DOCKER_CURRENT_USER="--user $(id -u):$(id -g) -e USER=$(id -u)"

# DOCKER

## dk-clear-logs
## Description
##   Clear all containers logs
## Usage:
##   $ dk-clear-logs

alias dk-clear-logs='sudo sh -c "truncate -s 0 /var/lib/docker/containers/*/*-json.log"'

## dkrtmp
## Description
##   runs a temporary container from a image (local or remote)
## Usage:
##   $ dkrtmp <image>[:<tag>]
##   $ dkrtmp <image uri>

alias dkrtmp="docker run -it --rm"

## dkrtmpuser
## Description
##   runs a temporary container from a image (local or remote)
##   with the current dir and user configured
## Usage:
##   $ dkrtmpuser <image>[:<tag>] [<shell|command>]
##   $ dkrtmpuser <image uri> [<shell|command>]

dkrtmpuser() {
  dkrtmp $DOCKER_CURRENT_USER -v "$(pwd):/usr/src/app" -w /usr/src/app $@
}

## dkrtmpnouser
## Description
##   runs a temporary container from a image (local or remote)
##   only with the current dir mounted
## Usage:
##   $ dkrtmpnouser <image>[:<tag>] [<shell|command>]
##   $ dkrtmpnouser <image uri> [<shell|command>]

dkrtmpnouser() {
  dkrtmp -v "$(pwd):/usr/src/app" -w /usr/src/app $1 bash
}

## dkrtmproot
## Description
##   runs a temporary container from a image (local or remote)
##    with the current dir and root configured
## Usage:
##   $ dkrtmproot <image>[:<tag>] [<shell|command>]
##   $ dkrtmproot <image uri> [<shell|command>]

dkrtmproot() {
  dkrtmp -u root -v "$(pwd):/usr/src/app" -w /usr/src/app $1 bash
}

## RAW docker images
for IMAGE_NAME in 'ruby' 'node' 'python' 'rust'
do
  alias dkr-$IMAGE_NAME-user="dkrtmpuser $IMAGE_NAME:latest"
  alias dkr-$IMAGE_NAME-root="dkrtmproot $IMAGE_NAME:latest"
  alias dkr-$IMAGE_NAME-nouser="dkrtmpnouser $IMAGE_NAME:latest"
  alias dkr-$IMAGE_NAME="dkr-$IMAGE_NAME-user"
done

###############################################
dkcpcredentials() {
  docker cp ~/.gitconfig $1:/root/.gitconfig
  docker cp ~/.ssh/id_rsa $1:/root/.ssh/id_rsa
}
