#!/usr/bin/env bash

DOCKER_COMPOSE_TEST_PARAMS="-e RAILS_ENV=test -e COVERAGE=true -e NODE_ENV=test -e RAILS_SYSTEM_TESTING_SCREENSHOT=artifact"
DOCKER_COMPOSE_DISPLAY=$DOCKER_XDISPLAY
DOCKER_COMPOSE_LOG_LINES=50
DOCKER_CURRENT_USER="--user $(id -u):$(id -g) -e USER=$(id -u)"
DOCKER_COMPOSE_PREFIXES=""
DOCKER_SOCK_VOLUME="-v /var/run/docker.sock:/var/run/docker.sock"

## DOCKER COMPOSE

## dkc
## Description
##   Alias for docker-compose
## Usage:
##   $ dkc <docker-compose args>

dkc() {
  docker compose $DOCKER_COMPOSE_PREFIXES $@
}

## dkc-logs
## Description
##   print last lines of container(s) log
## Usage:
##  $ dkc-logs [<container>]

dkclogs() {
  dkc logs -f --tail=$DOCKER_COMPOSE_LOG_LINES $@
}
alias dkc-logs='dkclogs'
alias dkc-logst='dkclogs -t'


## dkcx
## Description
##   attach a terminal into a running docker-compose container
##   NOTES: support all `docker-compose exec` params
## Usage:
##   $ dkcx <container> <shell>
##   $ dkcx-<bash|sh> <container>

dkcx() {
  dkc exec $@
}

## dkc-run
## Description
##   runs a temporary docker-compose container
##   NOTES: support all `docker-compose run` params
## Usage:
##   $ dkc-run <container> <shell>

dkcrun() {
  dkc run --rm $@
}
alias dkc-run='dkcrun'

## dkc-xrun
## Description
##   runs a temporary docker-compose container with display
##   NOTES: support all `docker-compose run` params
## Usage:
##   $ dkc-xrun <container> <shell>

dkcxrun(){
  dkcrun $DOCKER_COMPOSE_DISPLAY $@
}

alias dkc-xrun='dkcxrun'

## dkctest
## Description
##   runs a temporary docker-compose container with test flags
##   NOTE: there are flags only for ruby and node ony
## Usage:
##   $ dkctest <container> <shell|command>
##   $ dkct-<bash|sh> <container>

dkctest() {
  dkcxrun $DOCKER_COMPOSE_TEST_PARAMS $1 $2
}

## dkcxtest
## Description
##   docker-compose TEST MODE with display
## Usage:
##   $ dkcxtest <container> <shell|command>
##   $ dkctx-<bash|sh> <container>

dkcxtest() {
  dkcxrun $DOCKER_COMPOSE_TEST_PARAMS $1 $2
}

## HELPER FUNCTION
_map_dkc () {
  eval "$1 $3 $2"
}

for TERM_NAME in 'bash' 'sh'
do
  alias "dkct-$TERM_NAME"="_map_dkc dkctest $TERM_NAME"
  alias "dkctx-$TERM_NAME"="_map_dkc dkcxtest $TERM_NAME"
  alias "dkcx-$TERM_NAME"="_map_dkc dkcx $TERM_NAME"
done


dkc-switch (){
  docker stop $(docker ps |grep "0.0.0.0:443" | awk '{print $1}')
  dkc start router
}
